package me.verzqli.leetcode.dichotomy;

/**
 * 假设按照升序排序的数组在预先未知的某个点上进行了旋转。
 * <p>
 * ( 例如，数组?[0,0,1,2,2,5,6]?可能变为?[2,5,6,0,0,1,2]?)。
 * <p>
 * 编写一个函数来判断给定的目标值是否存在于数组中。若存在返回?true，否则返回?false。
 * <p>
 * 示例?1:
 * <p>
 * 输入: nums = [2,5,6,0,0,1,2], target = 0
 * 输出: true
 * 示例?2:
 * <p>
 * 输入: nums = [2,5,6,0,0,1,2], target = 3
 * 输出: false
 * 进阶:
 * <p>
 * 这是 搜索旋转排序数组?的延伸题目，本题中的?nums? 可能包含重复元素。
 * 这会影响到程序的时间复杂度吗？会有怎样的影响，为什么？
 * <p>
 * 来源：力扣（LeetCode）
 * 链接：https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */
public class LeetCode81 {
    public static void main(String[] args) {
    }

    public boolean search(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;
        int mid = 0;
        while (left <= right) {
            //顺便写上，这是防止left和right加起来超过int限制的写法。
            //属于一个小众优化，这里用不上，写起来记录下而已
            //mid = left + (right - left) / 2;
            mid = (left + right) / 2;
            if (nums[left]<=nums[mid]){

            }
        }
        return false;
    }

}
